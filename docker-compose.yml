services:
  nginx:
    image: nginx:stable-alpine
    ports:
      - "3000:80"
    volumes:
      - ./nginx-gateway/default.conf:/etc/nginx/conf.d/default.conf:ro
    networks: 
    -  cpm-client-network
    depends_on:
      - cpm-back
  cpm-client:
    container_name: cpm-client
    build: 
      context: ./cpm-client
      additional_contexts:
        - nginx=./nginx-client
      dockerfile: ../client.Dockerfile
      args:
        - EXPO_PUBLIC_API_URL=/
    environment:
      - PORT=3000
    networks:
      - cpm-client-network

  cpm-back:
    container_name: cpm-back
    build: 
      context: ./cpm-back
      dockerfile: ../back.Dockerfile
    restart: always
    environment:
      - PORT=80
      - DB_HOST=db
      - DB_DATABASE=${POSTGRES_DB}
      - DB_USERNAME=${POSTGRES_USER}
      - DB_PASSWORD=${POSTGRES_PW}
      - JWT_SECRET=hui
    networks:
      - cpm-client-network
      - cpm-back-network
    depends_on:
      db:
        condition: service_healthy
    
    volumes:
      - client-files:/usr/src/apps/server/public/userFiles
  db:
    image: postgres:17.4
    container_name: cpm-postgres
    restart: always
    environment:
        - POSTGRES_USER=${POSTGRES_USER}
        - PGUSER=${POSTGRES_USER}
        - POSTGRES_PASSWORD=${POSTGRES_PW}
        - POSTGRES_DB=${POSTGRES_DB}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 1s
      timeout: 5s
      retries: 10
    ports:
      - "5432:5432"
    volumes:
      - ./cpm-db/cp_market_09062025.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - cpm-back-network
  pgadmin:
      container_name: pgadmin
      image: dpage/pgadmin4
      environment:
        - PGADMIN_DEFAULT_EMAIL=${PGADMIN_MAIL}
        - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_PW}
      ports:
        - "5050:80"
      restart: always
      depends_on:
        db:
          condition: service_healthy
      networks:
      - cpm-back-network
volumes:
  postgres_data:
  client-files:
networks:
  cpm-client-network:
      driver: bridge
  cpm-back-network:
      driver: bridge
